name: Publish Types Package

on:
  push:
    branches:
      - main
    paths:
      - "src/types/**"

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Get current version
        id: get_version
        run: |
          LATEST_VERSION=$(npm view @bennyui/quotes-types version)
          VERSION_BITS=(${LATEST_VERSION//./ })
          V_MAJOR=${VERSION_BITS[0]}
          V_MINOR=${VERSION_BITS[1]}
          V_PATCH=${VERSION_BITS[2]}
          V_PATCH=$((V_PATCH + 1))
          NEW_VERSION="$V_MAJOR.$V_MINOR.$V_PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create tsconfig.json
        run: |
          echo '{
            "compilerOptions": {
              "target": "ESNext",
              "module": "CommonJS",
              "strict": true,
              "noImplicitAny": true,
              "strictNullChecks": true,
              "strictFunctionTypes": true,
              "strictBindCallApply": true,
              "strictPropertyInitialization": true,
              "noImplicitThis": true,
              "alwaysStrict": true,
              "noUnusedLocals": true,
              "noUnusedParameters": true,
              "noImplicitReturns": true,
              "noFallthroughCasesInSwitch": true,
              "moduleResolution": "node",
              "baseUrl": ".",
              "outDir": "dist",
              "declaration": true,
              "esModuleInterop": true
            },
            "include": ["src/types"],
            "exclude": ["node_modules", "**/*.spec.ts", "**/*.test.ts"]
          }' > tsconfig.json

      - name: Create package.json
        run: |
          echo '{
            "name": "@bennyui/quotes-types",
           "version": "'$NEW_VERSION'",
            "main": "dist/index.js",
            "types": "dist/index.d.ts",
            "peerDependencies": {
              "zod": "^3.21.4"
            },
            "devDependencies": {
              "zod": "^3.21.4"
            },
            "license": "MIT",
            "private": false,
            "publishConfig": {
              "access": "public"
            }
          }' > package.json

      - name: Install dependencies
        run: yarn install

      - name: Replace Deno import paths
        run: sed -i 's#https://deno.land/x/zod@v3.21.4/mod.ts#zod#g' src/types/index.ts

      - name: Build
        run: npx tsc

      - name: Cleanup
        run: |
          shopt -s extglob
          rm -rf !("dist"|"package.json")

      - name: Setup .npmrc file
        run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish
        run: yarn publish --access public --non-interactive --no-git-tag-version
